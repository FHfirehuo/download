#需要把文件名的-git去掉
app.name=download
app.description=${app.name} is a Spring Boot application

#server.context-path=/download
server.port=8888
#server.address=
#server.session.persistence=
#server.session.timeout=
#server.session.store-dir=
#server.session.cookie.*=
#server.error.path=


#server.port=8443
#server.ssl.key-store=classpath:keystore.jks
#server.ssl.key-store-password=secret
#server.ssl.key-password=another-secret

#默认情况下，响应的长度必须至少为2048字节才能执行压缩。 这可以使用server.compression.min-response-size属性进行配置。
#默认情况下，响应只有在内容类型为以下内容时才会被压缩：
#text/html
#text/xml
#text/plain
#text/css
#这可以使用server.compression.mime-types属性进行配置。
server.compression.enabled=true

server.tomcat.basedir=my-tomcat
#日志的默认位置是相对于tomcat基目录的日志目录
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)

#访问日志
server.undertow.accesslog.enabled=true
server.undertow.accesslog.pattern=%t %a "%r" %s (%D ms)

spring.profiles.active=dev

 #off log
spring.main.banner-mode=off

author = **

my.secret=${random.value}
my.number=${random.int}
my.bignumber=${random.long}
my.uuid=${random.uuid}
my.number.less.than.ten=${random.int(10)}
my.number.in.range=${random.int[1024,65536]}

logging.level.root=WARN
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR

#写入指定的日志文件。 名称可以是一个确切的位置或相对于当前目录。
logging.file=/home/run/log/download/server.log

#将spring.log写入指定的目录。 名称可以是一个确切的位置或相对于当前目录。
#logging.path=/user/download/

#默认情况下，资源被映射到/**，但是你可以通过spring.mvc.static-path-pattern来调整。 例如，将所有资源重定位到/resources/**可以实现如下：
#spring.mvc.static-path-pattern=/resources/**

#要使用缓存清除，以下配置将为所有静态资源配置缓存清除解决方案，从而有效地在URL中添加内容哈希
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**

#使用此配置，位于"js/lib/"下的JavaScript模块将使用固定的版本控制策略"/v12/js/lib/mymodule.js"，而其他资源仍将使用内容<link href="/css/spring-2a2d595e6ed9a0b24f027f2b63b134d6.css"/>。
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**
spring.resources.chain.strategy.fixed.enabled=true
spring.resources.chain.strategy.fixed.paths=bootstrap/js/,/popper/js/
spring.resources.chain.strategy.fixed.version=v4


###FREEMARKER (FreeMarkerAutoConfiguration)
########################################################
spring.freemarker.allow-request-override=false
spring.freemarker.cache=true
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=false
#解决java.io.FileNotFoundException: class path resource [templates/] cannot be resolved to absolute file path because it does not reside in the file system: jar:file:/E:/java8/download/target/download-0.0.1.jar!/BOOT-INF/classes!/templates/
spring.freemarker.prefer-file-system-access=false
#spring.freemarker.prefix=
#spring.freemarker.request-context-attribute=
#spring.freemarker.settings.*=
spring.freemarker.suffix=.ftl
#classpath:/templates/
spring.freemarker.template-loader-path=classpath:/templates/
#comma-separated list
#spring.freemarker.view-names= # whitelist of view names that can be resolved

spring.activemq.broker-url=tcp://211.88.**.**:****
spring.activemq.user=**
spring.activemq.password=*
#spring.activemq.in-memory=true

#spring.activemq.pool.enabled=true
#spring.activemq.pool.max-connections=50

# REDIS (RedisProperties)
#spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
 # Database index used by the connection factory.
spring.redis.database=0
#spring.redis.url= # Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379

# Redis server host.
spring.redis.host=***
spring.redis.password=
#spring.redis.ssl=false # Enable SSL support.
#spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
 # Redis server port.
spring.redis.port=***
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
#spring.redis.timeout=0 # Connection timeout in milliseconds.


#security.user.password=****